<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>随笔 on 超越的主页</title>
    <link>https://chaoyuezhao.github.io/categories/%E9%9A%8F%E7%AC%94/</link>
    <description>Recent content in 随笔 on 超越的主页</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 24 Dec 2017 19:35:02 +0800</lastBuildDate>
    
	<atom:link href="https://chaoyuezhao.github.io/categories/%E9%9A%8F%E7%AC%94/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>辞职三个月学习总结</title>
      <link>https://chaoyuezhao.github.io/posts/2017/12-24/</link>
      <pubDate>Sun, 24 Dec 2017 19:35:02 +0800</pubDate>
      
      <guid>https://chaoyuezhao.github.io/posts/2017/12-24/</guid>
      <description>写博客的好处是可以认真反思一下自己。
今天恍然发现，如果从离职开始计算，我完全脱产自学编程已经快4个月了。这段时间到底学了什么？做了什么新项目？先来看看统计数据吧。
 教程：学习了29个在线教程，其中18个已完成，11个未完成。
 书籍：看了8本技术书，其中完成度超过80%的有4本。
 项目：完成了一个静态网页设计；在GitHub开始了一个互联网名人堂翻译项目；开发了一个民国人物纪念网站 安汉纪念馆
  如果我现在还是学生，那么可以说这三个月学习效率还不错。然而现实是，我就快要到而立之年了，而且还打算尽快找到工作，这样看来这三个月的学习根本无法令人满意。目前我面临一个选择：是要继续加强基础知识的学习，还是尽快学习JS框架方便找工作？
这个选择确实不容易做出，如果要加强基础知识的话，是否要从计算机专业的教科书补起？数据结构、算法、编程思想这些都是基础中的基础，但是对于一个自学编程的人来说，也许应该更工作导向一些？随便点开一个网站中招聘前端工程师的岗位要求，几乎必有“熟悉并使用过Angular、React或Vue等框架”。为了找工作有时候还是得妥协，但是这么短的时间怎么可能达到“熟练掌握”或者“精通”？其实找工作、写简历、准备面试也是程序员需要学习的一大领域，慢慢明白这里面的门道很多的，找工作暂且按下不表，先来说说我的选择吧。
我的选择是深入学习JavaScript和CSS3。原因如下，学习了三个多月，发现自己JS用的很少，目前自己做的大多数工作都可以归为“网页设计”，离真正的“网页开发”还很远。主要是因为手写JS代码太少了，大部分时间是在用HTML和CSS，再结合上Bootstrap，偶尔找一些好用的库和API，然而JavaScript才属于前端的编程语言，不深入掌握原生代码，怎么好意思叫自己Web工程师？
另外，随着学习的深入，我发现CSS3真的很博大精深，很多复杂的东西，真正学好并不容易，而网页布局又无法离开它，所以我计划下一步的学习方案是啃下《JavaScript权威指南》和《CSS3权威指南（第四版）英文版》。《JavaScript权威指南》有三分之一都是参考资料，实际上主要内容也就700页左右，英文版的最新CSS3权威指南PDF版有一千七百多页，但是挑实用章节的重点难点看的话，也就一千页左右。我争取今年内把这两本大部头拿下。</description>
    </item>
    
  </channel>
</rss>